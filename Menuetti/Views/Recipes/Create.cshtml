@model Menuetti.Models.Recipes

@{
    ViewData["Title"] = "Luo uusi resepti";
    var ingredients = TempData["ingredients"];
    var errorMessage = ViewBag.IngredientNull;
    var alreadyAddedIngredients = ViewBag.alreadyAddedIngredients;
}
@section Scripts
    {
    <script src="~/js/site.js"></script>
    @if (ViewBag.AlreadyAddedIngredients != null)
    {
        <script>
               $(document).ready(function () {
                   setIndex(@alreadyAddedIngredients.Count);
               })
        </script>
    }
}

<h2>Luo uusi resepti</h2>
<hr />
<div id="formi">
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <input type="hidden" asp-for="UserId" class="form-control" value="@ViewBag.UserId" />
        </div>
        <div class="form-group">
            <label asp-for="RecipeName" class="control-label">Reseptin nimi</label>
            <input asp-for="RecipeName" autofocus class="form-control" />
            <span asp-validation-for="RecipeName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Portions" class="control-label">Annoksia</label>
            <input asp-for="Portions" class="form-control" />
            <span asp-validation-for="Portions" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Time" class="control-label">Valmistusaika (min)</label>
            <input asp-for="Time" class="form-control" />
            <span asp-validation-for="Time" class="text-danger"></span>
        </div>
        <label asp-for="Ingredients" class="control-label">Raaka-aineet</label>
        <div id="newIngredients">
            @*The ingredients come to this div when added*@
            @if (alreadyAddedIngredients != null && alreadyAddedIngredients.Count > 0)
            {
                var i = Model.Ingredients.Count() -1 ; // counting how many rows needed --> numbers to the field id's. -1 cause 0 is in the partial view.

                @foreach (var item in alreadyAddedIngredients)
                {
                    if (Model.Ingredients.First().IngredientName != item.IngredientName) // printing out all the rows except the last one that goes to the partial view
                    {
                        <div class="form-group" id="added-item-@i">
                            <div class="row" id="ingredient-row">
                                <div class="short-ingredient-box">
                                    <input class="form-control" type="number" id=ingredient-@i-amount min="1" name="Ingredients[@i].AmountG" required readonly value="@item.AmountG" />
                                </div>
                                <div class="short-ingredient-box">
                                    <input class="form-control" type="text" id=ingredient-@i-unit name="Ingredients[@i].RecipeUnit" required readonly value="@item.RecipeUnit" />
                                </div>
                                <div class="long-ingredient-box">
                                    <input class="form-control" type="text" id=ingredient-@i-name name="Ingredients[@i].IngredientName" required readonly value="@item.IngredientName" />
                                </div>
                                <div class="delete-button">
                                    <button type="button" onclick="deleteRow(id)" id="delete-button-@i">X</button>
                                </div>
                            </div>
                        </div>

                        i--;
                    }
                }
            }
        </div>
        @{await Html.RenderPartialAsync("LoadJson", ingredients, new ViewDataDictionary(ViewData) { { "rowNumber", 0 } });}
            @if (alreadyAddedIngredients != null)
            {
                <script>
                        document.getElementById("ingredient-0-amount").value = @Model.Ingredients.First().AmountG;
                        document.getElementById("ingredient-0-unit").value = "@Model.Ingredients.First().RecipeUnit";
                        document.getElementById("ingredient-0-name").value = "@Model.Ingredients.First().IngredientName";
                </script>
            }
        <button type="button" class="btn" id="AddIngredient" onclick="newIngredient()">Lisää uusi raaka-aine</button>
        <div class="form-group">
            <label asp-for="DietType" class="control-label">Ruokavalio</label>
            <select asp-for="DietType" class="form-control"><option disabled selected>--- Valitse ---</option><option>Sekaruoka</option><option>Kasvis</option><option>Vegaaninen</option></select>
            <span asp-validation-for="DietType" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Instructions" class="control-label">Valmistusohje</label>
            @Html.TextAreaFor(m => m.Instructions, 15, 600, new { @class = "form-control" })
            <span asp-validation-for="Instructions" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" name="submitButton" value="Tallenna resepti" class="btn btn-default" />
        </div>
    </form>
</div>
<div>
    <a asp-action="Index" button class="btn btn-default btn-md btn">Takaisin</a>
</div>